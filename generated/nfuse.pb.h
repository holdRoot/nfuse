// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nfuse.proto

#ifndef PROTOBUF_INCLUDED_nfuse_2eproto
#define PROTOBUF_INCLUDED_nfuse_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_nfuse_2eproto 

namespace protobuf_nfuse_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_nfuse_2eproto
namespace nfuse {
class Call;
class CallDefaultTypeInternal;
extern CallDefaultTypeInternal _Call_default_instance_;
class Tag;
class TagDefaultTypeInternal;
extern TagDefaultTypeInternal _Tag_default_instance_;
}  // namespace nfuse
namespace google {
namespace protobuf {
template<> ::nfuse::Call* Arena::CreateMaybeMessage<::nfuse::Call>(Arena*);
template<> ::nfuse::Tag* Arena::CreateMaybeMessage<::nfuse::Tag>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace nfuse {

// ===================================================================

class Call : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfuse.Call) */ {
 public:
  Call();
  virtual ~Call();

  Call(const Call& from);

  inline Call& operator=(const Call& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Call(Call&& from) noexcept
    : Call() {
    *this = ::std::move(from);
  }

  inline Call& operator=(Call&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Call& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Call* internal_default_instance() {
    return reinterpret_cast<const Call*>(
               &_Call_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Call* other);
  friend void swap(Call& a, Call& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Call* New() const final {
    return CreateMaybeMessage<Call>(NULL);
  }

  Call* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Call>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Call& from);
  void MergeFrom(const Call& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Call* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 4;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int64 stamp = 1;
  void clear_stamp();
  static const int kStampFieldNumber = 1;
  ::google::protobuf::int64 stamp() const;
  void set_stamp(::google::protobuf::int64 value);

  // int64 tags = 3;
  void clear_tags();
  static const int kTagsFieldNumber = 3;
  ::google::protobuf::int64 tags() const;
  void set_tags(::google::protobuf::int64 value);

  // int32 opcode = 2;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 2;
  ::google::protobuf::int32 opcode() const;
  void set_opcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfuse.Call)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int64 stamp_;
  ::google::protobuf::int64 tags_;
  ::google::protobuf::int32 opcode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_nfuse_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nfuse.Tag) */ {
 public:
  Tag();
  virtual ~Tag();

  Tag(const Tag& from);

  inline Tag& operator=(const Tag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tag(Tag&& from) noexcept
    : Tag() {
    *this = ::std::move(from);
  }

  inline Tag& operator=(Tag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tag* internal_default_instance() {
    return reinterpret_cast<const Tag*>(
               &_Tag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Tag* other);
  friend void swap(Tag& a, Tag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tag* New() const final {
    return CreateMaybeMessage<Tag>(NULL);
  }

  Tag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Tag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Tag& from);
  void MergeFrom(const Tag& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Tag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int64 stamp = 1;
  void clear_stamp();
  static const int kStampFieldNumber = 1;
  ::google::protobuf::int64 stamp() const;
  void set_stamp(::google::protobuf::int64 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:nfuse.Tag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int64 stamp_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_nfuse_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Call

// int64 stamp = 1;
inline void Call::clear_stamp() {
  stamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Call::stamp() const {
  // @@protoc_insertion_point(field_get:nfuse.Call.stamp)
  return stamp_;
}
inline void Call::set_stamp(::google::protobuf::int64 value) {
  
  stamp_ = value;
  // @@protoc_insertion_point(field_set:nfuse.Call.stamp)
}

// int32 opcode = 2;
inline void Call::clear_opcode() {
  opcode_ = 0;
}
inline ::google::protobuf::int32 Call::opcode() const {
  // @@protoc_insertion_point(field_get:nfuse.Call.opcode)
  return opcode_;
}
inline void Call::set_opcode(::google::protobuf::int32 value) {
  
  opcode_ = value;
  // @@protoc_insertion_point(field_set:nfuse.Call.opcode)
}

// int64 tags = 3;
inline void Call::clear_tags() {
  tags_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Call::tags() const {
  // @@protoc_insertion_point(field_get:nfuse.Call.tags)
  return tags_;
}
inline void Call::set_tags(::google::protobuf::int64 value) {
  
  tags_ = value;
  // @@protoc_insertion_point(field_set:nfuse.Call.tags)
}

// string value = 4;
inline void Call::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Call::value() const {
  // @@protoc_insertion_point(field_get:nfuse.Call.value)
  return value_.GetNoArena();
}
inline void Call::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfuse.Call.value)
}
#if LANG_CXX11
inline void Call::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfuse.Call.value)
}
#endif
inline void Call::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfuse.Call.value)
}
inline void Call::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfuse.Call.value)
}
inline ::std::string* Call::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:nfuse.Call.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Call::release_value() {
  // @@protoc_insertion_point(field_release:nfuse.Call.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Call::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:nfuse.Call.value)
}

// -------------------------------------------------------------------

// Tag

// int64 stamp = 1;
inline void Tag::clear_stamp() {
  stamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Tag::stamp() const {
  // @@protoc_insertion_point(field_get:nfuse.Tag.stamp)
  return stamp_;
}
inline void Tag::set_stamp(::google::protobuf::int64 value) {
  
  stamp_ = value;
  // @@protoc_insertion_point(field_set:nfuse.Tag.stamp)
}

// int32 type = 2;
inline void Tag::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Tag::type() const {
  // @@protoc_insertion_point(field_get:nfuse.Tag.type)
  return type_;
}
inline void Tag::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:nfuse.Tag.type)
}

// string value = 3;
inline void Tag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tag::value() const {
  // @@protoc_insertion_point(field_get:nfuse.Tag.value)
  return value_.GetNoArena();
}
inline void Tag::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nfuse.Tag.value)
}
#if LANG_CXX11
inline void Tag::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nfuse.Tag.value)
}
#endif
inline void Tag::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nfuse.Tag.value)
}
inline void Tag::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nfuse.Tag.value)
}
inline ::std::string* Tag::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:nfuse.Tag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tag::release_value() {
  // @@protoc_insertion_point(field_release:nfuse.Tag.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tag::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:nfuse.Tag.value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace nfuse

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_nfuse_2eproto
